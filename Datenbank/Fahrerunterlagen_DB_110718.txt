--drop table linie;
--drop table fundzettel;
--drop table wagenlaufkarte;
--drop table verschmutzungsmeldung;
--drop table verspaetungsmeldung;
--drop table urlaubstag;
--drop table urlaubstyp;
--drop table urlaubsantrag;
--drop table fahrerunterlagen;
--drop table unterlagentypen;
--drop table status;
--drop sequence public.fahrerunterlagen_fahrerunterlage_id_seq;

CREATE TABLE public.linie
(
    bezeichnung character varying(2) COLLATE pg_catalog."default" NOT NULL
);

CREATE TABLE public.unterlagentypen
(
    typ_id integer NOT NULL,
    typname varchar(30) COLLATE pg_catalog."default",
    tabellename varchar(30) COLLATE pg_catalog."default",
    CONSTRAINT typeid PRIMARY KEY (typ_id)
);


CREATE TABLE public.status
(
    statusname varchar(30) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT status_pk PRIMARY KEY (statusname)
);

CREATE SEQUENCE public.fahrerunterlagen_fahrerunterlage_id_seq;

CREATE TABLE public.fahrerunterlagen
(	
	
    fahrerunterlage_id integer NOT NULL DEFAULT nextval('fahrerunterlagen_fahrerunterlage_id_seq'::regclass),
    typ_id integer NOT NULL,
    status varchar(20) COLLATE pg_catalog."default",
    fahrer_pers_nr varchar(20) COLLATE pg_catalog."default",
    titel varchar(50) COLLATE pg_catalog."default",
    spreicherzeit timestamp without time zone,
    aenderungszeit timestamp without time zone,
    einreichungszeit timestamp without time zone,
    CONSTRAINT fahrerunterlage_pk PRIMARY KEY (fahrerunterlage_id),
    CONSTRAINT fahrerunterlagen_status FOREIGN KEY (status)
        REFERENCES public.status (statusname) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fahrerunterlagen_unterlagentypen FOREIGN KEY (typ_id)
        REFERENCES public.unterlagentypen (typ_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

CREATE TABLE public.wagenlaufkarte
(
    fahrerunterlage_id integer NOT NULL DEFAULT nextval('fahrerunterlagen_fahrerunterlage_id_seq'::regclass),
    wagen_nr integer,
    betriebsstelle varchar(3) COLLATE pg_catalog."default",
    datum date,
    kurs_nr integer,
    dienst_nr integer,
    anfangszeit time without time zone,
    anfangsort varchar(20) COLLATE pg_catalog."default",
    endezeit time without time zone,
    endeort varchar(20) COLLATE pg_catalog."default",
    entwerter_nr integer,
    fahrttyp varchar(20) COLLATE pg_catalog."default",
    km_start integer,
    km_ende integer,
    bemerkung text COLLATE pg_catalog."default",
    CONSTRAINT wagenlaufkarte_pkey PRIMARY KEY (fahrerunterlage_id)
);

CREATE TABLE public.verschmutzungsmeldung
(
    fahrerunterlage_id integer NOT NULL DEFAULT nextval('fahrerunterlagen_fahrerunterlage_id_seq'::regclass),
    datum date,
    wagen_nr integer,
    linie varchar(2) COLLATE pg_catalog."default",
    verunreinigt_ausgewechselt boolean,
    verursacher_ermittelt boolean,
    reinigungskosten integer,
    reinigungskosten_bezahlt boolean,
    verunreinigungsart varchar(20) COLLATE pg_catalog."default",
    verursachersname varchar(20) COLLATE pg_catalog."default",
    verursachersalter integer,
    verursachersstrasse varchar(20) COLLATE pg_catalog."default",
    verursachersstadt_city varchar(20) COLLATE pg_catalog."default",
    gesetzlicher_vertreter varchar(20) COLLATE pg_catalog."default",
    pers_nr_b varchar(20) COLLATE pg_catalog."default",
    pers_nr_f varchar(20) COLLATE pg_catalog."default",
    dienststelle varchar(20) COLLATE pg_catalog."default",
    einzuzahlen integer,
    CONSTRAINT verschmutzungsmeldung_pkey PRIMARY KEY (fahrerunterlage_id)
);


CREATE TABLE public.verspaetungsmeldung
(
    fahrerunterlage_id integer NOT NULL DEFAULT nextval('fahrerunterlagen_fahrerunterlage_id_seq'::regclass),
    datum date,
    dienst_nr integer,
    schlusszeit_der_dienst_nr timestamp without time zone,
    verspaetungs_bis timestamp without time zone,
    verspaetung varchar(10) COLLATE pg_catalog."default",
    soll_ist_vergleich boolean,
    diensttauschkonto boolean,
    begruendung varchar(50) COLLATE pg_catalog."default",
    Anordnung boolean,
    angeordnet_durch varchar(30) COLLATE pg_catalog."default",
    CONSTRAINT verspaetungsmeldung_pkey PRIMARY KEY (fahrerunterlage_id)
);


CREATE TABLE public.fundzettel
(
	fahrerunterlage_id integer NOT NULL DEFAULT nextval('fahrerunterlagen_fahrerunterlage_id_seq'::regclass),
    linie varchar(20) COLLATE pg_catalog."default",
    strecke varchar(20) COLLATE pg_catalog."default",
    fundort varchar(50) COLLATE pg_catalog."default",
    wg_nr varchar(20) COLLATE pg_catalog."default",
    fundsache varchar(100) COLLATE pg_catalog."default" NOT NULL,
    vom_fahrgast_gefunden boolean,
    ueber_fuenfzig_euro boolean,
    stamm_nr varchar(20) COLLATE pg_catalog."default",
    b varchar(10) COLLATE pg_catalog."default",
    finder_name varchar(50) COLLATE pg_catalog."default",
    strasse varchar(50) COLLATE pg_catalog."default",
    hausnr varchar(5) COLLATE pg_catalog."default",
    plz varchar(6) COLLATE pg_catalog."default",
    wohnort varchar(50) COLLATE pg_catalog."default",
    wert integer,
    bemerkung varchar(100) COLLATE pg_catalog."default",
    sofortige_rueckgabe boolean,
    datum timestamp without time zone,
    spind_nr integer,
    CONSTRAINT fundzettel_pk PRIMARY KEY (fahrerunterlage_id)
);

CREATE TABLE public.urlaubstyp
(
    typname varchar(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT typ_pk PRIMARY KEY (typname)
);

CREATE TABLE public.urlaubsantrag
(
    fahrerunterlage_id integer NOT NULL DEFAULT nextval('fahrerunterlagen_fahrerunterlage_id_seq'::regclass),
    b varchar(20) COLLATE pg_catalog."default",
    gl varchar(20) COLLATE pg_catalog."default",
    schulpflicht boolean,
    osterferien boolean,
    herbstferien boolean,
    urlaubsanspruch integer,
    CONSTRAINT fahrerunterlage_id_pk PRIMARY KEY (fahrerunterlage_id)
);

CREATE TABLE public.urlaubstag
(
    tag_id serial NOT NULL,
    urlaubsantrag_id integer NOT NULL,
    typ varchar(20) COLLATE pg_catalog."default",
    datum date,
    wichtigkeit integer,
    CONSTRAINT tag_id PRIMARY KEY (tag_id),
    CONSTRAINT typ_fk FOREIGN KEY (typ)
        REFERENCES public.urlaubstyp (typname) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT urlaubsantrad_fk FOREIGN KEY (urlaubsantrag_id)
        REFERENCES public.urlaubsantrag (fahrerunterlage_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);
